diff a/os/src/task/task.rs b/os/src/task/task.rs	(rejected hunks)
@@ -1,6 +1,6 @@
 //! Types related to task management
 use super::TaskContext;
-use crate::config::TRAP_CONTEXT_BASE;
+use crate::config::{MAX_SYSCALL_NUM, TRAP_CONTEXT_BASE};
 use crate::mm::{
     kernel_stack_position, MapPermission, MemorySet, PhysPageNum, VirtAddr, KERNEL_SPACE,
 };
@@ -28,6 +28,13 @@ pub struct TaskControlBlock {
 
     /// Program break
     pub program_brk: usize,
+
+    /// The start time of the task
+    pub start_time: usize,
+    /// The total running time of the task
+    pub syscall_times: [u32; MAX_SYSCALL_NUM],
+    /// The task runned or not
+    pub runned: bool,
 }
 
 impl TaskControlBlock {
@@ -63,6 +70,9 @@ impl TaskControlBlock {
             base_size: user_sp,
             heap_bottom: user_sp,
             program_brk: user_sp,
+            start_time: 0,
+            syscall_times: [0; MAX_SYSCALL_NUM],
+            runned: false,
         };
         // prepare TrapContext in user space
         let trap_cx = task_control_block.get_trap_cx();
